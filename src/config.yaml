# If you are creating an orderer, you obviously do not need to copy the PeerOUIdentifier into your 
# config.yaml file (or vice versa), but for the sake of simplicity you might want to use the entire
# section â€” extra stanzas do no harm, and they allow the same config.yaml to be used for multiple 
# types of nodes and identities associated with an organization.
NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: ./cacerts/ca-cert.pem    # This says that any certificate issued by ./cacerts/ca-cert.pem 
    OrganizationalUnitIdentifier: client  # in which OU=client, will identified as a client (role)
  PeerOUIdentifier:                       # Inspect certificates with: openssl x509 -in <cert-file.pem> -text
    Certificate: ./cacerts/ca-cert.pem    # The four roles are mutually exclusive
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: ./cacerts/ca-cert.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: ./cacerts/ca-cert.pem
    OrganizationalUnitIdentifier: orderer